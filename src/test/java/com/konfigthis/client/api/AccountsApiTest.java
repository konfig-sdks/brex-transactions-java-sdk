/*
 * Transactions API
 *  The transactions API lets you view your transactions, accounts, and statements. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: developer-access@brex.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CardAccount;
import com.konfigthis.client.model.CashAccount;
import com.konfigthis.client.model.PageCashAccount;
import com.konfigthis.client.model.PageStatement;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountsApi
 */
@Disabled
public class AccountsApiTest {

    private static AccountsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new AccountsApi(apiClient);
    }

    /**
     *  Get cash account by ID 
     *
     *  This endpoint returns the cash account associated with the provided ID with its status. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCashAccountTest() throws ApiException {
        String id = null;
        CashAccount response = api.getCashAccount(id)
                .execute();
        // TODO: test validations
    }

    /**
     *  List card accounts 
     *
     *  This endpoint lists all accounts of card type. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCardAccountsTest() throws ApiException {
        List<CardAccount> response = api.listCardAccounts()
                .execute();
        // TODO: test validations
    }

    /**
     *  List cash accounts 
     *
     *  This endpoint lists all the existing cash accounts with their status. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCashAccountsTest() throws ApiException {
        PageCashAccount response = api.listCashAccounts()
                .execute();
        // TODO: test validations
    }

    /**
     *  List cash account statements.     
     *
     *  This endpoint lists all finalized statements for the cash account by ID. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCashStatementsTest() throws ApiException {
        String id = null;
        String cursor = null;
        Integer limit = null;
        PageStatement response = api.listCashStatements(id)
                .cursor(cursor)
                .limit(limit)
                .execute();
        // TODO: test validations
    }

    /**
     *  List primary card account statements.  
     *
     *  This endpoint lists all finalized statements for the primary card account. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listPrimaryCardStatementsTest() throws ApiException {
        String cursor = null;
        Integer limit = null;
        PageStatement response = api.listPrimaryCardStatements()
                .cursor(cursor)
                .limit(limit)
                .execute();
        // TODO: test validations
    }

    /**
     *  Get primary cash account 
     *
     *  This endpoint returns the primary cash account with its status. There will always be only one primary account. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void statusTest() throws ApiException {
        CashAccount response = api.status()
                .execute();
        // TODO: test validations
    }

}
