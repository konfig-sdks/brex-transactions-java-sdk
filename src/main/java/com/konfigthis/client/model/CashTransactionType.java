/*
 * Transactions API
 *  The transactions API lets you view your transactions, accounts, and statements. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: developer-access@brex.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets CashTransactionType
 */
@JsonAdapter(CashTransactionType.Adapter.class)public enum CashTransactionType {
  
  PAYMENT("PAYMENT"),
  
  DIVIDEND("DIVIDEND"),
  
  FEE("FEE"),
  
  ADJUSTMENT("ADJUSTMENT"),
  
  INTEREST("INTEREST"),
  
  CARD_COLLECTION("CARD_COLLECTION"),
  
  REWARDS_REDEMPTION("REWARDS_REDEMPTION"),
  
  RECEIVABLES_OFFERS_ADVANCE("RECEIVABLES_OFFERS_ADVANCE"),
  
  FBO_TRANSFER("FBO_TRANSFER"),
  
  RECEIVABLES_OFFERS_REPAYMENT("RECEIVABLES_OFFERS_REPAYMENT"),
  
  RECEIVABLES_OFFERS_COLLECTION("RECEIVABLES_OFFERS_COLLECTION"),
  
  BREX_OPERATIONAL_TRANSFER("BREX_OPERATIONAL_TRANSFER"),
  
  INTRA_CUSTOMER_ACCOUNT_BOOK_TRANSFER("INTRA_CUSTOMER_ACCOUNT_BOOK_TRANSFER"),
  
  BOOK_TRANSFER("BOOK_TRANSFER"),
  
  CRYPTO_BRIDGE("CRYPTO_BRIDGE");

  private String value;

  CashTransactionType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CashTransactionType fromValue(String value) {
    for (CashTransactionType b : CashTransactionType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<CashTransactionType> {
    @Override
    public void write(final JsonWriter jsonWriter, final CashTransactionType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CashTransactionType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CashTransactionType.fromValue(value);
    }
  }
}

